Also just notes

Debug controls:
* F2 to bring up menu
* F3 to switch between fullscreen and windowed

how to read this todo:
- feature not yet done
    - sub-feature (part of the parent feature)
+ completed feature (group of features is considered completed only when all sub-features are)
? not sure this feature is needed or important
- features are listed in order of importance, more or less

General reminder
- I have no idea what I'm doing, for the most part
- Code quality. Doesn't. Matter. At. All.
    - as long as it mostly works and doesn't crash the game for no reason
        - silent errors are better than panicking :)


Important bugs
==============
- ESC/F10/F3 buttons might not work in browsers! they're used by browsers themselves
- ask about this on discord
    - (WASM; WORKS IN CHROMIUM) switching to fullscreen SOMETIMES doesn't work on itch.io with Firefox
        Window size changes, but actual view is distorted with horizontal black bars.
        At least in some cases, pressing fullscreen button quickly just after start works fine.
        Happens if with python server too, but fixes itself after about five seconds.
        Am using bevy_web_resizer; without it size changes are completely ignored.
- playtest fucking EVERYTHING
+ add LICENSE file and list used assets, with source and license
- DONT FORGET TO GREP AND FIX ALL TODOS
- (sometimes) bevy_kira_audio::audio_output: Failed to set volume for instance: CommandQueueFul
...


Needs to be done ASAP
=====================
- mechanics (minimal)
    + walls and player movement
        + spawn
        + simple kinematic controller
    + turret enemy
        + rotating turret
        + health
        + projectiles (ALL attacks in game are projectiles, techically)
        + respawn
    - player
        - dash
        - fire
            - ray: hits first target
            - hitting projectile will destroy it
            - hitting Volatile projectile will explode it
            - during dash makes x2 damage if shot goes in 90 arc in dash direction
            ? if button held, makes charged shot, which will fire a projectile when released
        - punch
            - hitting volatile projectile will make it do x2 damage and fly x2 faster
                - also if it enemy's, makes it player's and deflects it to cursor
            - during dash applied to whole trajectory, not just in front of player
            ? does x2 damage if executed immediatly after dash (and x4 damage to punched projectile instead of x2)
        - craft
            - enemies drop parts: (group 1: sphere, ray; group 2: laser, magnet)
            - parts can be combined, replacing current mega-weapon
            - mega-weapons have limited uses and can't be stored
            - weapons
                - rocket (sphere + laser)
                    - just projectile
                - shield (sphere + magnet)
                    - when equipped, appears in front of the player
                    - absorbs projectiles
                    - deflects rays (still gets damaged, but less)
                - railgun (ray + laser)
                    - just powerful ray which goes through all targets
                - deflector (ray + magnet)
                    - pushes all projectiles away (and turns them into player's)
    - advanced enemies
        - turret patterns
        - movement
            - patterns
            - player-based
            ? collision avoidance
        - statistics
- spawn waves
- asteroids (just big rocks, what else is there?)
    - would be fun to split them in parts on hit
- mini-bosses (like shield robot)
- bosses
- other important stuff
    - player reaction to being hit - particles, pulsating color, shaking, changing color, HUD, sound, etc
    - healing? drops and from some enemies?
    - tutorial wave & messages
    - HUD (explosion shaking?)
    - maybe add shop? points are from asters
    - combining smaller enemies into bigger ones?
    - add warning that it's playable only with kb & mouse (or add gamepad/touch support)

- graphics
    + explosions
    ? particles, like blood/oil splatters, debree from asters, etc

- audio
    - play beats, controlled by level via state:
        0 (no beats)
        1 |       |
        2 |   i   |   i  
        3 | . i . | . i .
            feel free to use other patterns, but you get the idea
            also mb 3rd level would be too much, dunno
        - beat timing should be adjustable (store them in resource)
        - provide resource with timings - when beat will begin and how long till next one
            // something like this - this is resource
            struct BeatTimings {
                next: Duration, // actually timestamp, not duration, based on GameTime::now()
                period: Duration, // time between closest beats
                level: u8, // or use separate struct/resource for it, doesn't matter
            }
        ? use two sets of beats - for when player is having good damage and for when player is low on HP

    - play ambient drone (tbh really not sure if this will work; maybe just use some music)
        - some system should control what to play; for now just change it over time
        - idea is there would be several drones of different tones, which could warn the player about
            being low on HP, boss appearing, etc

    + sound playback
        - features
            - positional sound (not all sounds are positional)
                + has fixed position
                ? follows specified entity
                + panning and volume change depending on distance and direction relatively to player
                - fix panning
                ? startup delay depending on distance
                ? doppler effect, but not sure if it would be even heard
            + slightly randomized parameters - volume, speed, panning
            ? delay before start
        + event (just play sound once)
        ? loop (play looped sound when component is added to the entity; removal doesn't matter for now)
            - sound pitch should be controlled, probably via same component

    - actual sounds
        - some can be taken from here: https://github.com/vasukas/rodent/tree/binary_sounds/data/sounds
            don't forget to convert them for kira
        - actual list will be ready later

    ? would be nice to have volume limiter to avoid peaking, but that may be non-doable

...


Additional features
===================
? more mechanics
...



Would be nice to have but not important
=======================================
- settings
    - remappable controls (just make UI for InputMap)
    - play sound when adjusting volume - when user stops moving slider
- player cursor / laser sight - to indicate where shots will go
? gamepad and touch support - probably will be unplayable


Only after jam
==============
- refactor, comment, playtest
- try using leafwing-input-manager
- co-op - possibly even over network; would require adjusting difficulty
- is bevy_web_resizer still required or is that issue already fixed?

