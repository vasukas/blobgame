[package]
name = "blobfight"
version = "0.1.0"
edition = "2021"

[features]
default = ["debug_build"]
debug_build = [
    "bevy/dynamic",
    "bevy/filesystem_watcher",
]

[dependencies]
# Engine
bevy = {version = "0.8", default-features = false, features = [
    "bevy_asset",
    "bevy_winit",
    "bevy_sprite",
    "bevy_text",

    "png",
    "x11",
    "serialize",
]}
bevy_egui = {version = "0.15", default-features = false, features = ["default_fonts"]}
bevy_kira_audio = {version = "0.12", features = ["wav", "ogg"]}
bevy_prototype_lyon = "0.6"
bevy_rapier2d = "0.16"

# General utilities
enum-map = {version = "2.4", features = ["serde"]}
itertools = "0.10"
rand = "0.8"
ron = "0.7"
serde = {version = "1", features = ["derive"]}

# WASM-specific
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-cookies = "0.1"

[patch.crates-io]
# (WASM - MacOS Chrome) workaround for https://github.com/bevyengine/bevy/issues/5426 until bevy 0.8.2 I guess
wgpu = {git = "https://github.com/mockersf/wgpu/", branch = "unconditional-clear-workaround"}
# (Linux - ALSA) workaround for https://github.com/RustAudio/cpal/issues/606 (but with playback) until cpal 0.13.6
cpal = {git = "https://github.com/RustAudio/cpal", rev = "f0d47204c91e5aa38f74bd47e49e6d91c8c70a5e"}

# Enable only a small amount of optimization in debug mode
[profile.dev]
opt-level = 1

# Enable high optimizations for dependencies (incl. Bevy), but not for our code:
[profile.dev.package."*"]
opt-level = 3
